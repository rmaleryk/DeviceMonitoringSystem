// <auto-generated />
using System;
using DMS.Monitor.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DMS.Monitor.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250107142604_AddBoilersTable")]
    partial class AddBoilersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DMS.Monitor.Domain.Boilers.Boiler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Boilers");
                });

            modelBuilder.Entity("DMS.Monitor.Domain.Boilers.Boiler", b =>
                {
                    b.OwnsOne("DMS.Monitor.Domain.Boilers.BoilerTemperature", "CurrentTemperature", b1 =>
                        {
                            b1.Property<Guid>("BoilerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Value")
                                .HasColumnType("float");

                            b1.HasKey("BoilerId");

                            b1.ToTable("Boilers");

                            b1.WithOwner()
                                .HasForeignKey("BoilerId");
                        });

                    b.Navigation("CurrentTemperature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
